(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{33:function(e,o){e.exports=((e,o)=>{entities.find("client").forEach(i=>entities.getComponent(i,"client").send(e,o))})},9:function(e,o,i){(function(o){"undefined"==typeof window&&i(33);const n=i(32),t="undefined"==typeof window?1/30:1/60;let d=[],s=new n.World({gravity:[0,-3,82]});"undefined"!=typeof window?window.world=s:o.world=s;let a=new n.Body({id:"ground"});a.addShape(new n.Plane({collisionGroup:Math.pow(2,1),collisionMask:-1})),s.addBody(a),[-1,1].forEach(e=>{let o=new n.Body({angle:Math.PI*(1==e?.5:1.5),position:[100*e,0],id:(e>0?"right":"left")+"Wall"});o.addShape(new n.Plane({collisionGroup:Math.pow(2,1),collisionMask:-1})),s.addBody(o)}),entities.emitter.on("bodyRemove",e=>{d.push(entities.getComponent(e,"body"))}),entities.emitter.on("bodyCreate",e=>{let o=entities.getComponent(e,"physicsConfig");if(!o)throw new Error("You can't add a body component to an entity without a physicsConfig component.");o.body.addShape(o.shape),o.physical&&(o.body.id=e,s.addBody(o.body)),entities.entities[e].body=o.body}),entities.emitter.on("bodyFromBox",e=>{let o=entities.getComponent(e,"physicsConfig");void 0===o.shapeConfig.collisionMask&&(o.shapeConfig.collisionMask=-1),o.shape=new n.Box(JSON.parse(JSON.stringify(o.shapeConfig))),o.body=new n.Body(o.bodyConfig),entities.addComponent(e,"body")}),entities.emitter.on("physicsConfigAddedFromServer",e=>{entities.emitter.emit("bodyFromBox",e);let o=entities.getComponent(e,"physicsConfig");if(!o.physical){let e=o.body;e.interpolatedPosition=e.position,e.interpolatedAngle=e.angle}}),e.exports={update:(e,o)=>{s.step(t,o,10),d=d.filter(e=>(s.removeBody(e),!1))}}}).call(this,i(0))}}]);