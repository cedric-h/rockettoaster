(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{13:function(e,t,n){const o=n(33);let s={},i=Date.now();entities.emitter.on("loaded",()=>{server.on("teleport",e=>{let t=entities.find("serverId").filter(t=>entities.getComponent(t,"serverId")===e.serverId)[0];entities.getComponent(t,"body").position=e.to}),entities.emitter.on("bodyCreate",e=>{s[e]={}}),server.on("physics",e=>{i=Date.now(),entities.find("serverId").forEach(t=>{let n=entities.getComponent(t,"serverId");if(e[n]){let o=entities.getComponent(t,"body"),i=s[t];Object.keys(e[n]).forEach(t=>{"position"===t||"angle"===t?i[t]=e[n][t]:o[t]=e[n][t]})}})})}),e.exports={componentTypesAffected:["body","serverId"],searchName:"physicsDataTransmitted",update:(e,t)=>{let n=entities.getComponent(e,"body"),r=s[e];Object.keys(r).forEach(e=>{let s=r[e],a=n[e];"position"===e&&o.vec2.lerp(a,a,s,t),"angle"===e&&(a=function(e,t,n){return shortest_angle=((t-e)%(2*Math.PI)+3*Math.PI)%(2*Math.PI)-Math.PI,shortest_angle*n}(a,s,(Date.now()-i)/100))})}}}}]);